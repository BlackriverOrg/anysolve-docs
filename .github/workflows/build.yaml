# This workflow will build a docker container, publish it to Google Container Registry when a release is created
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Set up secrets in your workspace: GKE_PROJECT with the name of the project, GKE_EMAIL with the service account email, GKE_KEY with the Base64 encoded JSON service account key (https://github.com/GoogleCloudPlatform/github-actions/tree/docs/service-account-key/setup-gcloud#inputs).
#
# 3. Change the values for the GKE_ZONE, GKE_CLUSTER, IMAGE, REGISTRY_HOSTNAME and DEPLOYMENT_NAME environment variables (below).
name: Build to GKE

on:
  pull_request:
    branches:
      - main

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ vars.GKE_PROJECT }}
  GKE_EMAIL: ${{ vars.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: eu-west4-b
  IMAGE: anysolve-docs
  REGISTRY_HOSTNAME: eu.gcr.io

jobs:
  setup-build:
    name: Setup, Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: Checkout
        uses: actions/checkout@v2

      # Build the Docker image
      - name: Build
        run: |
          docker build -t "$REGISTRY_HOSTNAME"/"$GKE_PROJECT"/"$IMAGE":"latest" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" .
